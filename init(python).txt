from DBConnect import getDbConnection
from wtform import Form, BooleanField , TextField , PasswordField , validators
from MySQLdb import escape_string as thwart
import gc 
from content_management import content
#### garbage collector

####  pip install Flask
####  pip install Flask-wtf 
####  pip install passlib

from passlib.hash import sha256_crypt
from flask import Flask
from flask import Flask, flash, redirect, render_template, request, session, abort, url_for
import os
#from sqlalchemy.orm import sessionmaker
#from tabledef import *
engine = create_engine('sqlite:///tutorial.db', echo=True)

app = Flask(__name__)

@app.route('/')
def home():
if not session.get('logged_in'):
return render_template('login.html')
else:
return "Hello Boss!  <a href="/logout">Logout</a>"

@app.route('/login', methods=['POST'])
def do_admin_login():

POST_USERNAME = str(request.form['username'])
POST_PASSWORD = str(request.form['password'])

Session = sessionmaker(bind=engine)
s = Session()
query = s.query(User).filter(User.username.in_([POST_USERNAME]), User.password.in_([POST_PASSWORD]) )
result = query.first()
if result:
session['logged_in'] = True
else:
flash('wrong password!')
return home()

#@app.route('/login/', methods=["GET","POST"])
#def login_page():
#
#    error = ''
#    try:
#	
#        if request.method == "POST":
#		
#            attempted_username = request.form['username']
#            attempted_password = request.form['password']
#
#            #flash(attempted_username)
#            #flash(attempted_password)
#
#            if attempted_username == "admin" and attempted_password == "password":
#                return redirect(url_for('dashboard'))
#				
#            else:
#                error = "Invalid credentials. Try Again."
#
#        return render_template("login.html", error = error)
#
#    except Exception as e:
#        #flash(e)
#        return render_template("login.html", error = error)  
		

@app.route('/register/', methods=["GET","POST"])
def register_page():
    try:
        form = RegistrationForm(request.form)

        if request.method == "POST" and form.validate():
            username  = form.username.data
            email = form.email.data
            password = sha256_crypt.encrypt((str(form.password.data)))
            c, conn = connection()

            x = c.execute("SELECT * FROM users WHERE username = (%s)",
                          (thwart(username)))

            if int(x) > 0:
                flash("That username is already taken, please choose another")
                return render_template('register.html', form=form)

            else:
                c.execute("INSERT INTO users (username, password, email, tracking) VALUES (%s, %s, %s, %s)",
                          (thwart(username), thwart(password), thwart(email), thwart("/introduction-to-python-programming/")))
                
                conn.commit()
                flash("Thanks for registering!")
                c.close()
                conn.close()
                gc.collect()

                session['logged_in'] = True
                session['username'] = username

                return redirect(url_for('dashboard'))

        return render_template("register.html", form=form)

    except Exception as e:
        return(str(e))

  

@app.route("/logout")
def logout():
session['logged_in'] = False
return home()

if __name__ == "__main__":
app.secret_key = os.urandom(12)
app.run(debug=True,host='0.0.0.0', port=4000)

class RegistrationForm(Form):
    username = TextField('Username', [validators.Length(min=4, max=20)])
    email = TextField('Email Address', [validators.Length(min=6, max=50)])
    password = PasswordField('New Password', [validators.Required(), validators.EqualTo('confirm', message='Passwords must match')])
    confirm = PasswordField('Repeat Password')
    accept_tos = BooleanField('I accept the Terms of Service and Privacy Notice (updated Jan 22, 2015)', [validators.Required()])